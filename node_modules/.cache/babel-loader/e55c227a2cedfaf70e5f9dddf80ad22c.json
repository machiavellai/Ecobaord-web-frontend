{"ast":null,"code":"import axios from \"axios\";\nexport default class CityService {\n  constructor() {\n    this.controllerUrl = `${process.env.REACT_APP_API_URL}/cities`;\n  }\n\n  getAll() {\n    return axios.get(this.controllerUrl);\n  }\n\n  getById(id) {\n    return axios.get(`${this.controllerUrl}/byid`, {\n      params: {\n        id\n      }\n    });\n  }\n\n  getByName(name) {\n    return axios.get(`${this.controllerUrl}/byname`, {\n      params: {\n        name\n      }\n    });\n  }\n\n  getByNameContains(name) {\n    return axios.get(`${this.controllerUrl}/bynamecontains`, {\n      params: {\n        name\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/machiavelli/Desktop/hrms-project-frontend/src/services/cityService.js"],"names":["axios","CityService","controllerUrl","process","env","REACT_APP_API_URL","getAll","get","getById","id","params","getByName","name","getByNameContains"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,WAAN,CAAkB;AAAA;AAAA,SAC/BC,aAD+B,GACd,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,SADlB;AAAA;;AAG/BC,EAAAA,MAAM,GAAG;AACP,WAAON,KAAK,CAACO,GAAN,CAAU,KAAKL,aAAf,CAAP;AACD;;AAEDM,EAAAA,OAAO,CAACC,EAAD,EAAK;AACV,WAAOT,KAAK,CAACO,GAAN,CAAW,GAAE,KAAKL,aAAc,OAAhC,EAAwC;AAAEQ,MAAAA,MAAM,EAAE;AAAED,QAAAA;AAAF;AAAV,KAAxC,CAAP;AACD;;AAEDE,EAAAA,SAAS,CAACC,IAAD,EAAO;AACd,WAAOZ,KAAK,CAACO,GAAN,CAAW,GAAE,KAAKL,aAAc,SAAhC,EAA0C;AAAEQ,MAAAA,MAAM,EAAE;AAAEE,QAAAA;AAAF;AAAV,KAA1C,CAAP;AACD;;AAEDC,EAAAA,iBAAiB,CAACD,IAAD,EAAO;AACtB,WAAOZ,KAAK,CAACO,GAAN,CAAW,GAAE,KAAKL,aAAc,iBAAhC,EAAkD;AACvDQ,MAAAA,MAAM,EAAE;AAAEE,QAAAA;AAAF;AAD+C,KAAlD,CAAP;AAGD;;AAnB8B","sourcesContent":["import axios from \"axios\";\n\nexport default class CityService {\n  controllerUrl = `${process.env.REACT_APP_API_URL}/cities`;\n\n  getAll() {\n    return axios.get(this.controllerUrl);\n  }\n\n  getById(id) {\n    return axios.get(`${this.controllerUrl}/byid`, { params: { id } });\n  }\n\n  getByName(name) {\n    return axios.get(`${this.controllerUrl}/byname`, { params: { name } });\n  }\n\n  getByNameContains(name) {\n    return axios.get(`${this.controllerUrl}/bynamecontains`, {\n      params: { name },\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}