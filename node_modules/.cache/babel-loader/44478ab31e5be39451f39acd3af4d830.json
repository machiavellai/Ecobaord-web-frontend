{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.belongToTypes = exports.isValidObject = exports.isArrayObject = exports.validateOptions = exports.DefaultOption = void 0;\n/**\n * Default options for convert function. This option is not recursive.\n */\n\nexports.DefaultOption = {\n  recursive: false,\n  recursiveInArray: false,\n  keepTypesOnRecursion: []\n};\n\nexports.validateOptions = function (opt) {\n  if (opt === void 0) {\n    opt = exports.DefaultOption;\n  }\n\n  if (opt.recursive == null) {\n    opt = exports.DefaultOption;\n  } else if (opt.recursiveInArray == null) {\n    opt.recursiveInArray = false;\n  }\n\n  return opt;\n};\n\nexports.isArrayObject = function (obj) {\n  return obj != null && Array.isArray(obj);\n};\n\nexports.isValidObject = function (obj) {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n};\n\nexports.belongToTypes = function (obj, types) {\n  return (types || []).some(function (Type) {\n    return obj instanceof Type;\n  });\n};","map":{"version":3,"sources":["/Users/machiavelli/Desktop/hrms-project-frontend/node_modules/js-convert-case/lib/modules/extends/utils.js"],"names":["Object","defineProperty","exports","value","belongToTypes","isValidObject","isArrayObject","validateOptions","DefaultOption","recursive","recursiveInArray","keepTypesOnRecursion","opt","obj","Array","isArray","types","some","Type"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwBF,OAAO,CAACG,aAAR,GAAwBH,OAAO,CAACI,aAAR,GAAwBJ,OAAO,CAACK,eAAR,GAA0BL,OAAO,CAACM,aAAR,GAAwB,KAAK,CAA/H;AACA;AACA;AACA;;AACAN,OAAO,CAACM,aAAR,GAAwB;AACpBC,EAAAA,SAAS,EAAE,KADS;AAEpBC,EAAAA,gBAAgB,EAAE,KAFE;AAGpBC,EAAAA,oBAAoB,EAAE;AAHF,CAAxB;;AAKAT,OAAO,CAACK,eAAR,GAA0B,UAAUK,GAAV,EAAe;AACrC,MAAIA,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAAEA,IAAAA,GAAG,GAAGV,OAAO,CAACM,aAAd;AAA8B;;AACpD,MAAII,GAAG,CAACH,SAAJ,IAAiB,IAArB,EAA2B;AACvBG,IAAAA,GAAG,GAAGV,OAAO,CAACM,aAAd;AACH,GAFD,MAGK,IAAII,GAAG,CAACF,gBAAJ,IAAwB,IAA5B,EAAkC;AACnCE,IAAAA,GAAG,CAACF,gBAAJ,GAAuB,KAAvB;AACH;;AACD,SAAOE,GAAP;AACH,CATD;;AAUAV,OAAO,CAACI,aAAR,GAAwB,UAAUO,GAAV,EAAe;AAAE,SAAOA,GAAG,IAAI,IAAP,IAAeC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAtB;AAA2C,CAApF;;AACAX,OAAO,CAACG,aAAR,GAAwB,UAAUQ,GAAV,EAAe;AAAE,SAAOA,GAAG,IAAI,IAAP,IAAe,OAAOA,GAAP,KAAe,QAA9B,IAA0C,CAACC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAlD;AAAuE,CAAhH;;AACAX,OAAO,CAACE,aAAR,GAAwB,UAAUS,GAAV,EAAeG,KAAf,EAAsB;AAAE,SAAO,CAACA,KAAK,IAAI,EAAV,EAAcC,IAAd,CAAmB,UAAUC,IAAV,EAAgB;AAAE,WAAOL,GAAG,YAAYK,IAAtB;AAA6B,GAAlE,CAAP;AAA6E,CAA7H","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.belongToTypes = exports.isValidObject = exports.isArrayObject = exports.validateOptions = exports.DefaultOption = void 0;\n/**\n * Default options for convert function. This option is not recursive.\n */\nexports.DefaultOption = {\n    recursive: false,\n    recursiveInArray: false,\n    keepTypesOnRecursion: []\n};\nexports.validateOptions = function (opt) {\n    if (opt === void 0) { opt = exports.DefaultOption; }\n    if (opt.recursive == null) {\n        opt = exports.DefaultOption;\n    }\n    else if (opt.recursiveInArray == null) {\n        opt.recursiveInArray = false;\n    }\n    return opt;\n};\nexports.isArrayObject = function (obj) { return obj != null && Array.isArray(obj); };\nexports.isValidObject = function (obj) { return obj != null && typeof obj === 'object' && !Array.isArray(obj); };\nexports.belongToTypes = function (obj, types) { return (types || []).some(function (Type) { return obj instanceof Type; }); };\n"]},"metadata":{},"sourceType":"script"}