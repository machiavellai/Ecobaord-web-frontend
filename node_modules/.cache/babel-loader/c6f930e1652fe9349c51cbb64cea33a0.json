{"ast":null,"code":"var _jsxFileName = \"/Users/machiavelli/Desktop/hrms-project-frontend/src/components/FormSelect/FormSelect.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./FormSelect.scss\";\nimport React, { useState } from \"react\";\nimport { toHeaderCase, toSentenceCase } from \"js-convert-case\";\nimport { useField } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormSelect({\n  name,\n  options,\n  placeholder = `Select ${toHeaderCase(name)}`,\n  label = toHeaderCase(name),\n  className,\n  search = true\n}) {\n  _s();\n\n  const [filterText, setFilterText] = useState(\"\"),\n        [fieldLabel, setFieldLabel] = useState(\"\");\n  const [, meta, helper] = useField(name);\n\n  const setField = (value, label) => {\n    helper.setValue(value);\n    setFieldLabel(label);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mb-3 ${className}`,\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `${name}Select`,\n      className: \"form-label fw-bold\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"position-relative btn btn-white dropdown-toggle w-100 d-flex justify-content-between align-items-center\",\n        type: \"button\",\n        id: `${name}-select`,\n        \"data-bs-toggle\": \"dropdown\",\n        \"aria-expanded\": \"false\",\n        children: [!!meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-input-invalid-feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 27\n        }, this) : null, fieldLabel || placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dropdown-menu w-100 p-2 rounded\",\n        \"aria-labelledby\": `${name}-select`,\n        children: [search && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-group-text\",\n            id: `${name}-search-input-icon`,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"filterText\",\n            className: \"form-control\",\n            placeholder: \"Search\",\n            \"aria-describedby\": `${name}-search-input-icon`,\n            \"aria-label\": \"Username\",\n            autoComplete: \"off\",\n            onChange: e => setFilterText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), options.filter(o => o.label.toLowerCase().includes(filterText.toLowerCase())).map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setField(option.value, option.label),\n          className: `dropdown-item cursor-pointer ${fieldLabel === option ? \"active\" : \"\"}`,\n          children: option.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), !!meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger ms-1\",\n        children: toSentenceCase(meta.error)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormSelect, \"WKjlFMeCmbc2lve0BGq/iq3eAxs=\", false, function () {\n  return [useField];\n});\n\n_c = FormSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormSelect\");","map":{"version":3,"sources":["/Users/machiavelli/Desktop/hrms-project-frontend/src/components/FormSelect/FormSelect.jsx"],"names":["React","useState","toHeaderCase","toSentenceCase","useField","FormSelect","name","options","placeholder","label","className","search","filterText","setFilterText","fieldLabel","setFieldLabel","meta","helper","setField","value","setValue","error","e","target","filter","o","toLowerCase","includes","map","option","index"],"mappings":"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","sourcesContent":["import \"./FormSelect.scss\";\n\nimport React, { useState } from \"react\";\nimport { toHeaderCase, toSentenceCase } from \"js-convert-case\";\n\nimport { useField } from \"formik\";\n\nexport default function FormSelect({\n  name,\n  options,\n  placeholder = `Select ${toHeaderCase(name)}`,\n  label = toHeaderCase(name),\n  className,\n  search = true,\n}) {\n  const [filterText, setFilterText] = useState(\"\"),\n    [fieldLabel, setFieldLabel] = useState(\"\");\n\n  const [, meta, helper] = useField(name);\n\n  const setField = (value, label) => {\n    helper.setValue(value);\n    setFieldLabel(label);\n  };\n\n  return (\n    <div className={`mb-3 ${className}`}>\n      {label && (\n        <label htmlFor={`${name}Select`} className='form-label fw-bold'>\n          {label}\n        </label>\n      )}\n\n      <div className='dropdown'>\n        <button\n          className='position-relative btn btn-white dropdown-toggle w-100 d-flex justify-content-between align-items-center'\n          type='button'\n          id={`${name}-select`}\n          data-bs-toggle='dropdown'\n          aria-expanded='false'\n        >\n          {!!meta.error ? <div className='select-input-invalid-feedback'></div> : null}\n          {fieldLabel || placeholder}\n        </button>\n\n        <ul className='dropdown-menu w-100 p-2 rounded' aria-labelledby={`${name}-select`}>\n          {search && (\n            <div className='input-group mb-2'>\n              <span className='input-group-text' id={`${name}-search-input-icon`}>\n                <i className='bi bi-search' />\n              </span>\n              <input\n                type='text'\n                name='filterText'\n                className='form-control'\n                placeholder='Search'\n                aria-describedby={`${name}-search-input-icon`}\n                aria-label='Username'\n                autoComplete='off'\n                onChange={(e) => setFilterText(e.target.value)}\n              />\n            </div>\n          )}\n\n          {options\n            .filter((o) => o.label.toLowerCase().includes(filterText.toLowerCase()))\n            .map((option, index) => (\n              <li\n                key={index}\n                onClick={() => setField(option.value, option.label)}\n                className={`dropdown-item cursor-pointer ${fieldLabel === option ? \"active\" : \"\"}`}\n              >\n                {option.label}\n              </li>\n            ))}\n        </ul>\n        {!!meta.error ? <div className='text-danger ms-1'>{toSentenceCase(meta.error)}</div> : null}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}