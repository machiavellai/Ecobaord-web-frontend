{"ast":null,"code":"var _jsxFileName = \"/Users/machiavelli/Desktop/hrms-project-frontend/src/pages/Employers/Update/EmployerUpdate.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./EmployerUpdate.scss\";\nimport * as Yup from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport DisplayHeader from \"../../../components/DisplayHeader/DisplayHeader\";\nimport EmployerService from \"../../../services/employerService\";\nimport FormFileInput from \"../../../components/FormFileInput/FormFileInput\";\nimport FormInput from \"../../../components/FormInput/FormInput\";\nimport LoadingSpinner from \"../../../components/LoadingSpinner/LoadingSpinner\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmployerUpdate() {\n  _s();\n\n  const [employer, setEmployer] = useState(null);\n\n  const employerService = useMemo(() => new EmployerService(), []),\n        getByUserId = useCallback(async () => {\n    const user = {\n      id: 2\n    },\n          //TODO Login Redux\n    result = await employerService.getById(user.id);\n    if (result.data.success) setEmployer(result.data.data);\n  }, [employerService]),\n        getLastUpdateByUserId = useCallback(async () => {\n    const user = {\n      id: 2\n    },\n          //TODO Login Redux\n    result = await employerService.getLastUpdateByUserId(user.id);\n    if (result.data.success) showPendingUpdateApproval(result.data.data);\n  }, [employerService]),\n        updateByUser = async values => {\n    const updatedEmployer = {\n      employerId: employer.id,\n      ...values\n    },\n          result = await employerService.updateByUser(updatedEmployer);\n    if (result.data.success) toast.success(result.data.message);\n  };\n\n  const showPendingUpdateApproval = employerUpdate => {\n    if (!employerUpdate.approved && !employerUpdate.deleted) toast.info(\"Awaiting approval for the update.\");\n  };\n\n  const initialValues = {\n    password: \"\"\n  },\n        validationSchema = Yup.object().shape({\n    companyName: Yup.string().required(),\n    website: Yup.string().required(),\n    corporateEmail: Yup.string().required(),\n    phone: Yup.string().required(),\n    password: Yup.string().required()\n  });\n  useEffect(() => {\n    getByUserId();\n    getLastUpdateByUserId();\n  }, [getByUserId, getLastUpdateByUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(DisplayHeader, {\n      firstText: \"Edit\",\n      secondText: \"Employer Information\",\n      size: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), employer ? /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        companyName: employer.companyName,\n        website: employer.website,\n        corporateEmail: employer.corporateEmail,\n        phone: employer.phone,\n        ...initialValues\n      },\n      validationSchema: validationSchema,\n      onSubmit: values => updateByUser(values),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm\",\n            children: /*#__PURE__*/_jsxDEV(FormInput, {\n              name: \"companyName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(FormFileInput, {\n                  name: \"companyImage\",\n                  accept: \"image/png, image/jpeg\",\n                  render: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"input-group-text btn btn-primary\",\n                    htmlFor: `image-file-input`,\n                    children: \"Upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-3 d-flex justify-content-center align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                  className: \"figure position-relative me-3 mb-3\",\n                  children: employer.companyImageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: employer.companyImageUrl,\n                    className: \"figure-img img-fluid rounded img-thumbnail rounded shadow\",\n                    alt: `${employer.companyName} logo`,\n                    width: \"70\",\n                    height: \"70\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-briefcase fs-1 me-3 text-muted\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"website\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"corporateEmail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary w-100 mt-3\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmployerUpdate, \"9vIxajpPoLEg0TeD00EgVrAmU+Y=\");\n\n_c = EmployerUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployerUpdate\");","map":{"version":3,"sources":["/Users/machiavelli/Desktop/hrms-project-frontend/src/pages/Employers/Update/EmployerUpdate.jsx"],"names":["Yup","Form","Formik","React","useCallback","useEffect","useMemo","useState","DisplayHeader","EmployerService","FormFileInput","FormInput","LoadingSpinner","toast","EmployerUpdate","employer","setEmployer","employerService","getByUserId","user","id","result","getById","data","success","getLastUpdateByUserId","showPendingUpdateApproval","updateByUser","values","updatedEmployer","employerId","message","employerUpdate","approved","deleted","info","initialValues","password","validationSchema","object","shape","companyName","string","required","website","corporateEmail","phone","companyImageUrl"],"mappings":"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","sourcesContent":["import \"./EmployerUpdate.scss\";\n\nimport * as Yup from \"yup\";\n\nimport { Form, Formik } from \"formik\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport DisplayHeader from \"../../../components/DisplayHeader/DisplayHeader\";\nimport EmployerService from \"../../../services/employerService\";\nimport FormFileInput from \"../../../components/FormFileInput/FormFileInput\";\nimport FormInput from \"../../../components/FormInput/FormInput\";\nimport LoadingSpinner from \"../../../components/LoadingSpinner/LoadingSpinner\";\nimport { toast } from \"react-toastify\";\n\nexport default function EmployerUpdate() {\n  const [employer, setEmployer] = useState(null);\n\n  const employerService = useMemo(() => new EmployerService(), []),\n    getByUserId = useCallback(async () => {\n      const user = { id: 2 }, //TODO Login Redux\n        result = await employerService.getById(user.id);\n\n      if (result.data.success) setEmployer(result.data.data);\n    }, [employerService]),\n    getLastUpdateByUserId = useCallback(async () => {\n      const user = { id: 2 }, //TODO Login Redux\n        result = await employerService.getLastUpdateByUserId(user.id);\n\n      if (result.data.success) showPendingUpdateApproval(result.data.data);\n    }, [employerService]),\n    updateByUser = async (values) => {\n      const updatedEmployer = {\n          employerId: employer.id,\n          ...values,\n        },\n        result = await employerService.updateByUser(updatedEmployer);\n\n      if (result.data.success) toast.success(result.data.message);\n    };\n\n  const showPendingUpdateApproval = (employerUpdate) => {\n    if (!employerUpdate.approved && !employerUpdate.deleted)\n      toast.info(\"Awaiting approval for the update.\");\n  };\n\n  const initialValues = {\n      password: \"\",\n    },\n    validationSchema = Yup.object().shape({\n      companyName: Yup.string().required(),\n      website: Yup.string().required(),\n      corporateEmail: Yup.string().required(),\n      phone: Yup.string().required(),\n      password: Yup.string().required(),\n    });\n\n  useEffect(() => {\n    getByUserId();\n    getLastUpdateByUserId();\n  }, [getByUserId, getLastUpdateByUserId]);\n\n  return (\n    <div className='container'>\n      <DisplayHeader firstText='Edit' secondText='Employer Information' size='5' />\n      {employer ? (\n        <Formik\n          initialValues={{\n            companyName: employer.companyName,\n            website: employer.website,\n            corporateEmail: employer.corporateEmail,\n            phone: employer.phone,\n            ...initialValues,\n          }}\n          validationSchema={validationSchema}\n          onSubmit={(values) => updateByUser(values)}\n        >\n          <Form>\n            <div className='row'>\n              <div className='col-sm'>\n                <FormInput name='companyName' />\n              </div>\n              <div className='col-sm'>\n                <div className='row'>\n                  <div className='col'>\n                    <FormFileInput\n                      name='companyImage'\n                      accept='image/png, image/jpeg'\n                      render={\n                        <button\n                          type='submit'\n                          className='input-group-text btn btn-primary'\n                          htmlFor={`image-file-input`}\n                        >\n                          Upload\n                        </button>\n                      }\n                    />\n                  </div>\n                  <div className='col-3 d-flex justify-content-center align-items-center'>\n                    <figure className='figure position-relative me-3 mb-3'>\n                      {employer.companyImageUrl ? (\n                        <img\n                          src={employer.companyImageUrl}\n                          className='figure-img img-fluid rounded img-thumbnail rounded shadow'\n                          alt={`${employer.companyName} logo`}\n                          width='70'\n                          height='70'\n                        />\n                      ) : (\n                        <i className='bi bi-briefcase fs-1 me-3 text-muted' />\n                      )}\n                    </figure>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <FormInput name='website' />\n            <FormInput name='corporateEmail' />\n            <FormInput name='phone' />\n            <FormInput type='password' name='password' />\n            <button type='submit' className='btn btn-primary w-100 mt-3'>\n              Save\n            </button>\n          </Form>\n        </Formik>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}