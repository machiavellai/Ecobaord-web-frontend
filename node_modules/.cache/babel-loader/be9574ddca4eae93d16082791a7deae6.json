{"ast":null,"code":"\"use strict\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar utils_1 = require(\"../utils\");\nvar js_camelcase_1 = require(\"../../js-camelcase\");\n/**\n * Convert string keys in an object to camelCase format.\n * @param obj: object to convert keys. If `obj` isn't a json object, `null` is returned.\n * @param opt: (optional) Options parameter, default is non-recursive.\n */\nfunction camelKeys(obj, opt) {\n  if (opt === void 0) {\n    opt = utils_1.DefaultOption;\n  }\n  if (!utils_1.isValidObject(obj)) return null;\n  opt = utils_1.validateOptions(opt);\n  var res = {};\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n    var nkey = js_camelcase_1.default(key);\n    if (opt.recursive) {\n      if (utils_1.isValidObject(value)) {\n        if (!utils_1.belongToTypes(value, opt.keepTypesOnRecursion)) {\n          value = camelKeys(value, opt);\n        }\n      } else if (opt.recursiveInArray && utils_1.isArrayObject(value)) {\n        value = __spreadArrays(value).map(function (v) {\n          var ret = v;\n          if (utils_1.isValidObject(v)) {\n            // object in array\n            if (!utils_1.belongToTypes(ret, opt.keepTypesOnRecursion)) {\n              ret = camelKeys(v, opt);\n            }\n          } else if (utils_1.isArrayObject(v)) {\n            // array in array\n            // workaround by using an object holding array value\n            var temp = camelKeys({\n              key: v\n            }, opt);\n            ret = temp.key;\n          }\n          return ret;\n        });\n      }\n    }\n    res[nkey] = value;\n  });\n  return res;\n}\nexports.default = camelKeys;","map":{"version":3,"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","Object","defineProperty","exports","value","utils_1","require","js_camelcase_1","camelKeys","obj","opt","DefaultOption","isValidObject","validateOptions","res","keys","forEach","key","nkey","default","recursive","belongToTypes","keepTypesOnRecursion","recursiveInArray","isArrayObject","map","v","ret","temp"],"sources":["/Users/machiavelli/Desktop/hrms-project-frontend/node_modules/js-convert-case/lib/modules/extends/camelcase-keys-object/index.js"],"sourcesContent":["\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nvar js_camelcase_1 = require(\"../../js-camelcase\");\n/**\n * Convert string keys in an object to camelCase format.\n * @param obj: object to convert keys. If `obj` isn't a json object, `null` is returned.\n * @param opt: (optional) Options parameter, default is non-recursive.\n */\nfunction camelKeys(obj, opt) {\n    if (opt === void 0) { opt = utils_1.DefaultOption; }\n    if (!utils_1.isValidObject(obj))\n        return null;\n    opt = utils_1.validateOptions(opt);\n    var res = {};\n    Object.keys(obj).forEach(function (key) {\n        var value = obj[key];\n        var nkey = js_camelcase_1.default(key);\n        if (opt.recursive) {\n            if (utils_1.isValidObject(value)) {\n                if (!utils_1.belongToTypes(value, opt.keepTypesOnRecursion)) {\n                    value = camelKeys(value, opt);\n                }\n            }\n            else if (opt.recursiveInArray && utils_1.isArrayObject(value)) {\n                value = __spreadArrays(value).map(function (v) {\n                    var ret = v;\n                    if (utils_1.isValidObject(v)) {\n                        // object in array\n                        if (!utils_1.belongToTypes(ret, opt.keepTypesOnRecursion)) {\n                            ret = camelKeys(v, opt);\n                        }\n                    }\n                    else if (utils_1.isArrayObject(v)) {\n                        // array in array\n                        // workaround by using an object holding array value\n                        var temp = camelKeys({ key: v }, opt);\n                        ret = temp.key;\n                    }\n                    return ret;\n                });\n            }\n        }\n        res[nkey] = value;\n    });\n    return res;\n}\nexports.default = camelKeys;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}