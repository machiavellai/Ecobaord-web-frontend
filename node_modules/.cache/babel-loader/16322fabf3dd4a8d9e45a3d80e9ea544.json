{"ast":null,"code":"var _jsxFileName = \"/Users/machiavelli/Desktop/hrms-project-frontend/src/components/FormFileInput/FormFileInput.jsx\",\n    _s = $RefreshSig$();\n\nimport { toHeaderCase, toSentenceCase } from \"js-convert-case\";\nimport React from \"react\";\nimport { useField } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormFileInput({\n  name,\n  accept,\n  label = toHeaderCase(name),\n  className,\n  render\n}) {\n  _s();\n\n  const [, meta, helper] = useField(name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `${name}-file-input`,\n      className: \"form-label fw-bold\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group has-validation\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name,\n        accept,\n        type: \"file\",\n        onChange: e => helper.setValue(e.currentTarget.files[0]),\n        id: `${name}-file-input`,\n        className: `form-control ${className} ${meta.touched && !!meta.error ? \"is-invalid\" : \"\"}`,\n        \"aria-describedby\": `${name}-file-input`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), render, meta.touched && !!meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `${name}-file-input`,\n        className: \"invalid-feedback\",\n        children: toSentenceCase(meta.error)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormFileInput, \"Ubz2LEGKsYT3oDa1rdy5eKtzCvk=\", false, function () {\n  return [useField];\n});\n\n_c = FormFileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormFileInput\");","map":{"version":3,"sources":["/Users/machiavelli/Desktop/hrms-project-frontend/src/components/FormFileInput/FormFileInput.jsx"],"names":["toHeaderCase","toSentenceCase","React","useField","FormFileInput","name","accept","label","className","render","meta","helper","e","setValue","currentTarget","files","touched","error"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,cAAvB,QAA6C,iBAA7C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;;AAEA,eAAe,SAASC,aAAT,CAAuB;AACpCC,EAAAA,IADoC;AAEpCC,EAAAA,MAFoC;AAGpCC,EAAAA,KAAK,GAAGP,YAAY,CAACK,IAAD,CAHgB;AAIpCG,EAAAA,SAJoC;AAKpCC,EAAAA;AALoC,CAAvB,EAMZ;AAAA;;AACD,QAAM,GAAGC,IAAH,EAASC,MAAT,IAAmBR,QAAQ,CAACE,IAAD,CAAjC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACGE,KAAK,iBACJ;AAAO,MAAA,OAAO,EAAG,GAAEF,IAAK,aAAxB;AAAsC,MAAA,SAAS,EAAC,oBAAhD;AAAA,gBACGE;AADH;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACE;AACQF,QAAAA,IADR;AACcC,QAAAA,MADd;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAGM,CAAD,IAAOD,MAAM,CAACE,QAAP,CAAgBD,CAAC,CAACE,aAAF,CAAgBC,KAAhB,CAAsB,CAAtB,CAAhB,CAHnB;AAIE,QAAA,EAAE,EAAG,GAAEV,IAAK,aAJd;AAKE,QAAA,SAAS,EAAG,gBAAeG,SAAU,IACnCE,IAAI,CAACM,OAAL,IAAgB,CAAC,CAACN,IAAI,CAACO,KAAvB,GAA+B,YAA/B,GAA8C,EAC/C,EAPH;AAQE,4BAAmB,GAAEZ,IAAK;AAR5B;AAAA;AAAA;AAAA;AAAA,cADF,EAWGI,MAXH,EAYGC,IAAI,CAACM,OAAL,IAAgB,CAAC,CAACN,IAAI,CAACO,KAAvB,gBACC;AAAK,QAAA,EAAE,EAAG,GAAEZ,IAAK,aAAjB;AAA+B,QAAA,SAAS,EAAC,kBAAzC;AAAA,kBACGJ,cAAc,CAACS,IAAI,CAACO,KAAN;AADjB;AAAA;AAAA;AAAA;AAAA,cADD,GAIG,IAhBN;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GApCuBb,a;UAOGD,Q;;;KAPHC,a","sourcesContent":["import { toHeaderCase, toSentenceCase } from \"js-convert-case\";\n\nimport React from \"react\";\nimport { useField } from \"formik\";\n\nexport default function FormFileInput({\n  name,\n  accept,\n  label = toHeaderCase(name),\n  className,\n  render,\n}) {\n  const [, meta, helper] = useField(name);\n\n  return (\n    <div className='mb-3'>\n      {label && (\n        <label htmlFor={`${name}-file-input`} className='form-label fw-bold'>\n          {label}\n        </label>\n      )}\n      <div className='input-group has-validation'>\n        <input\n          {...{ name, accept }}\n          type='file'\n          onChange={(e) => helper.setValue(e.currentTarget.files[0])}\n          id={`${name}-file-input`}\n          className={`form-control ${className} ${\n            meta.touched && !!meta.error ? \"is-invalid\" : \"\"\n          }`}\n          aria-describedby={`${name}-file-input`}\n        />\n        {render}\n        {meta.touched && !!meta.error ? (\n          <div id={`${name}-file-input`} className='invalid-feedback'>\n            {toSentenceCase(meta.error)}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}