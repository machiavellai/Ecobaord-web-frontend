{"ast":null,"code":"var _jsxFileName = \"/Users/machiavelli/Desktop/hrms-project-frontend/src/components/FormInput/FormInput.jsx\",\n    _s = $RefreshSig$();\n\nimport { toHeaderCase, toSentenceCase } from \"js-convert-case\";\nimport React from \"react\";\nimport { useField } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormInput({\n  type,\n  name,\n  label = toHeaderCase(name),\n  placeholder = `Please enter ${toHeaderCase(name)}`,\n  className,\n  render\n}) {\n  _s();\n\n  const [field, meta] = useField(name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `${name}-input`,\n      className: \"form-label fw-bold\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group has-validation\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...field,\n        name,\n        placeholder,\n        type: type,\n        id: `${name}-input`,\n        className: `form-control ${className} ${meta.touched && !!meta.error ? \"is-invalid\" : \"\"}`,\n        \"aria-describedby\": `${name}-input`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), render, meta.touched && !!meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `${name}-input`,\n        className: \"invalid-feedback\",\n        children: toSentenceCase(meta.error)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = FormInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"sources":["/Users/machiavelli/Desktop/hrms-project-frontend/src/components/FormInput/FormInput.jsx"],"names":["toHeaderCase","toSentenceCase","React","useField","FormInput","type","name","label","placeholder","className","render","field","meta","touched","error"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,cAAvB,QAA6C,iBAA7C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAChCC,EAAAA,IADgC;AAEhCC,EAAAA,IAFgC;AAGhCC,EAAAA,KAAK,GAAGP,YAAY,CAACM,IAAD,CAHY;AAIhCE,EAAAA,WAAW,GAAI,gBAAeR,YAAY,CAACM,IAAD,CAAO,EAJjB;AAKhCG,EAAAA,SALgC;AAMhCC,EAAAA;AANgC,CAAnB,EAOZ;AAAA;;AACD,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBT,QAAQ,CAACG,IAAD,CAA9B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACGC,KAAK,iBACJ;AAAO,MAAA,OAAO,EAAG,GAAED,IAAK,QAAxB;AAAiC,MAAA,SAAS,EAAC,oBAA3C;AAAA,gBACGC;AADH;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACE,sBACMI,KADN;AAEQL,QAAAA,IAFR;AAEcE,QAAAA,WAFd;AAGE,QAAA,IAAI,EAAEH,IAHR;AAIE,QAAA,EAAE,EAAG,GAAEC,IAAK,QAJd;AAKE,QAAA,SAAS,EAAG,gBAAeG,SAAU,IACnCG,IAAI,CAACC,OAAL,IAAgB,CAAC,CAACD,IAAI,CAACE,KAAvB,GAA+B,YAA/B,GAA8C,EAC/C,EAPH;AAQE,4BAAmB,GAAER,IAAK;AAR5B;AAAA;AAAA;AAAA;AAAA,cADF,EAWGI,MAXH,EAYGE,IAAI,CAACC,OAAL,IAAgB,CAAC,CAACD,IAAI,CAACE,KAAvB,gBACC;AAAK,QAAA,EAAE,EAAG,GAAER,IAAK,QAAjB;AAA0B,QAAA,SAAS,EAAC,kBAApC;AAAA,kBACGL,cAAc,CAACW,IAAI,CAACE,KAAN;AADjB;AAAA;AAAA;AAAA;AAAA,cADD,GAIG,IAhBN;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GArCuBV,S;UAQAD,Q;;;KARAC,S","sourcesContent":["import { toHeaderCase, toSentenceCase } from \"js-convert-case\";\n\nimport React from \"react\";\nimport { useField } from \"formik\";\n\nexport default function FormInput({\n  type,\n  name,\n  label = toHeaderCase(name),\n  placeholder = `Please enter ${toHeaderCase(name)}`,\n  className,\n  render,\n}) {\n  const [field, meta] = useField(name);\n\n  return (\n    <div className='mb-3'>\n      {label && (\n        <label htmlFor={`${name}-input`} className='form-label fw-bold'>\n          {label}\n        </label>\n      )}\n      <div className='input-group has-validation'>\n        <input\n          {...field}\n          {...{ name, placeholder }}\n          type={type}\n          id={`${name}-input`}\n          className={`form-control ${className} ${\n            meta.touched && !!meta.error ? \"is-invalid\" : \"\"\n          }`}\n          aria-describedby={`${name}-input`}\n        />\n        {render}\n        {meta.touched && !!meta.error ? (\n          <div id={`${name}-input`} className='invalid-feedback'>\n            {toSentenceCase(meta.error)}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}