{"ast":null,"code":"\"use strict\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"../utils\");\n/**\n * Convert string keys in an object to UPPERCASE format.\n * @param obj: object to convert keys. If `obj` isn't a json object, `null` is returned.\n * @param opt: (optional) Options parameter, default is non-recursive.\n */\n\n\nfunction upperKeys(obj, opt) {\n  if (opt === void 0) {\n    opt = utils_1.DefaultOption;\n  }\n\n  if (!utils_1.isValidObject(obj)) return null;\n  opt = utils_1.validateOptions(opt);\n  var res = {};\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n    var nkey = key.toUpperCase();\n\n    if (opt.recursive) {\n      if (utils_1.isValidObject(value)) {\n        if (!utils_1.belongToTypes(value, opt.keepTypesOnRecursion)) {\n          value = upperKeys(value, opt);\n        }\n      } else if (opt.recursiveInArray && utils_1.isArrayObject(value)) {\n        value = __spreadArrays(value).map(function (v) {\n          var ret = v;\n\n          if (utils_1.isValidObject(v)) {\n            // object in array\n            if (!utils_1.belongToTypes(ret, opt.keepTypesOnRecursion)) {\n              ret = upperKeys(v, opt);\n            }\n          } else if (utils_1.isArrayObject(v)) {\n            // array in array\n            // workaround by using an object holding array value\n            var temp = upperKeys({\n              key: v\n            }, opt);\n            ret = temp.key;\n          }\n\n          return ret;\n        });\n      }\n    }\n\n    res[nkey] = value;\n  });\n  return res;\n}\n\nexports.default = upperKeys;","map":{"version":3,"sources":["/Users/machiavelli/Desktop/hrms-project-frontend/node_modules/js-convert-case/lib/modules/extends/uppercase-keys-object/index.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","Object","defineProperty","exports","value","utils_1","require","upperKeys","obj","opt","DefaultOption","isValidObject","validateOptions","res","keys","forEach","key","nkey","toUpperCase","recursive","belongToTypes","keepTypesOnRecursion","recursiveInArray","isArrayObject","map","v","ret","temp","default"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\n/**\n * Convert string keys in an object to UPPERCASE format.\n * @param obj: object to convert keys. If `obj` isn't a json object, `null` is returned.\n * @param opt: (optional) Options parameter, default is non-recursive.\n */\nfunction upperKeys(obj, opt) {\n    if (opt === void 0) { opt = utils_1.DefaultOption; }\n    if (!utils_1.isValidObject(obj))\n        return null;\n    opt = utils_1.validateOptions(opt);\n    var res = {};\n    Object.keys(obj).forEach(function (key) {\n        var value = obj[key];\n        var nkey = key.toUpperCase();\n        if (opt.recursive) {\n            if (utils_1.isValidObject(value)) {\n                if (!utils_1.belongToTypes(value, opt.keepTypesOnRecursion)) {\n                    value = upperKeys(value, opt);\n                }\n            }\n            else if (opt.recursiveInArray && utils_1.isArrayObject(value)) {\n                value = __spreadArrays(value).map(function (v) {\n                    var ret = v;\n                    if (utils_1.isValidObject(v)) {\n                        // object in array\n                        if (!utils_1.belongToTypes(ret, opt.keepTypesOnRecursion)) {\n                            ret = upperKeys(v, opt);\n                        }\n                    }\n                    else if (utils_1.isArrayObject(v)) {\n                        // array in array\n                        // workaround by using an object holding array value\n                        var temp = upperKeys({ key: v }, opt);\n                        ret = temp.key;\n                    }\n                    return ret;\n                });\n            }\n        }\n        res[nkey] = value;\n    });\n    return res;\n}\nexports.default = upperKeys;\n"]},"metadata":{},"sourceType":"script"}