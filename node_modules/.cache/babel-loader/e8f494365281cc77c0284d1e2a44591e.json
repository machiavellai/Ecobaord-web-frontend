{"ast":null,"code":"var _jsxFileName = \"/Users/machiavelli/Desktop/hrms-project-frontend/src/pages/JobSeekers/CV/Update/JobSeekerCVUpdateSkills.jsx\",\n    _s = $RefreshSig$();\n\nimport * as Yup from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport FormInput from \"../../../../components/FormInput/FormInput\";\nimport JobSeekerCVSkillService from \"../../../../services/jobSeekerCVSkillService\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobSeekerCVUpdateSkills({\n  jobSeekerCV\n}) {\n  _s();\n\n  const [jobSeekerCVSkills, setJobSeekerCVSkills] = useState([]),\n        [isEditing, setIsEditing] = useState(false);\n  const initialValues = {\n    name: \"\"\n  },\n        validationSchema = Yup.object().shape({\n    name: Yup.string().required()\n  });\n\n  const toggleEditing = () => setIsEditing(!isEditing);\n\n  const jobSeekerCVSkillService = useMemo(() => new JobSeekerCVSkillService(), []),\n        getAllByJobSeekerId = useCallback(async jobSeekerId => {\n    const result = await jobSeekerCVSkillService.getAllByJobSeekerCV_Id(jobSeekerId);\n    if (result.data.success) setJobSeekerCVSkills(result.data.data);\n  }, [jobSeekerCVSkillService]),\n        add = async values => {\n    const newJobSeekerCVSkill = {\n      jobSeekerCV,\n      ...values\n    },\n          result = await jobSeekerCVSkillService.add(newJobSeekerCVSkill);\n\n    if (result.data.success) {\n      getAllByJobSeekerId(jobSeekerCV.jobSeeker.id);\n      toast.success(result.data.message);\n    }\n  },\n        delete_ = async id => {\n    const result = await jobSeekerCVSkillService.delete(id);\n\n    if (result.data.success) {\n      setJobSeekerCVSkills(jobSeekerCVSkills.filter(i => i.id !== id));\n      toast.success(result.data.message);\n    }\n  };\n\n  useEffect(() => {\n    getAllByJobSeekerId(jobSeekerCV.id);\n  }, [getAllByJobSeekerId, jobSeekerCV.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), !isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn shadow-none\",\n        onClick: () => toggleEditing(),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-pencil-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn shadow-none\",\n        onClick: () => toggleEditing(),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-check-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: jobSeekerCVSkills.length > 0 ? jobSeekerCVSkills.map(jobSeekerCVSkill => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge bg-secondary w-100 d-flex justify-content-start align-items-center mb-2 py-3 position-relative shadow\",\n        children: [jobSeekerCVSkill.name, isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => delete_(jobSeekerCVSkill.id),\n          className: \"btn bg-transparent shadow-none text-white position-absolute\",\n          style: {\n            right: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-trash-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, jobSeekerCVSkill.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center display-1 text-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-text-paragraph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: values => add(values),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"name\",\n          label: false,\n          render: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"input-group-text btn btn-primary\",\n            htmlFor: `name-input`,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobSeekerCVUpdateSkills, \"7OHOut9y/XFj9XnDezu9W8gRq5Y=\");\n\n_c = JobSeekerCVUpdateSkills;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobSeekerCVUpdateSkills\");","map":{"version":3,"sources":["/Users/machiavelli/Desktop/hrms-project-frontend/src/pages/JobSeekers/CV/Update/JobSeekerCVUpdateSkills.jsx"],"names":["Yup","Form","Formik","React","useCallback","useEffect","useMemo","useState","FormInput","JobSeekerCVSkillService","toast","JobSeekerCVUpdateSkills","jobSeekerCV","jobSeekerCVSkills","setJobSeekerCVSkills","isEditing","setIsEditing","initialValues","name","validationSchema","object","shape","string","required","toggleEditing","jobSeekerCVSkillService","getAllByJobSeekerId","jobSeekerId","result","getAllByJobSeekerCV_Id","data","success","add","values","newJobSeekerCVSkill","jobSeeker","id","message","delete_","delete","filter","i","length","map","jobSeekerCVSkill","right"],"mappings":"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","sourcesContent":["import * as Yup from \"yup\";\n\nimport { Form, Formik } from \"formik\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport FormInput from \"../../../../components/FormInput/FormInput\";\nimport JobSeekerCVSkillService from \"../../../../services/jobSeekerCVSkillService\";\nimport { toast } from \"react-toastify\";\n\nexport default function JobSeekerCVUpdateSkills({ jobSeekerCV }) {\n  const [jobSeekerCVSkills, setJobSeekerCVSkills] = useState([]),\n    [isEditing, setIsEditing] = useState(false);\n\n  const initialValues = { name: \"\" },\n    validationSchema = Yup.object().shape({\n      name: Yup.string().required(),\n    });\n\n  const toggleEditing = () => setIsEditing(!isEditing);\n\n  const jobSeekerCVSkillService = useMemo(() => new JobSeekerCVSkillService(), []),\n    getAllByJobSeekerId = useCallback(\n      async (jobSeekerId) => {\n        const result = await jobSeekerCVSkillService.getAllByJobSeekerCV_Id(jobSeekerId);\n        if (result.data.success) setJobSeekerCVSkills(result.data.data);\n      },\n      [jobSeekerCVSkillService]\n    ),\n    add = async (values) => {\n      const newJobSeekerCVSkill = {\n          jobSeekerCV,\n          ...values,\n        },\n        result = await jobSeekerCVSkillService.add(newJobSeekerCVSkill);\n      if (result.data.success) {\n        getAllByJobSeekerId(jobSeekerCV.jobSeeker.id);\n        toast.success(result.data.message);\n      }\n    },\n    delete_ = async (id) => {\n      const result = await jobSeekerCVSkillService.delete(id);\n      if (result.data.success) {\n        setJobSeekerCVSkills(jobSeekerCVSkills.filter((i) => i.id !== id));\n        toast.success(result.data.message);\n      }\n    };\n\n  useEffect(() => {\n    getAllByJobSeekerId(jobSeekerCV.id);\n  }, [getAllByJobSeekerId, jobSeekerCV.id]);\n\n  return (\n    <div>\n      <div className='d-flex justify-content-between align-items-center'>\n        <h3>Skills</h3>\n        {!isEditing ? (\n          <button className='btn shadow-none' onClick={() => toggleEditing()}>\n            <i className='bi bi-pencil-square' />\n          </button>\n        ) : (\n          <button className='btn shadow-none' onClick={() => toggleEditing()}>\n            <i className='bi bi-check-lg' />\n          </button>\n        )}\n      </div>\n      <div className='mb-3'>\n        {jobSeekerCVSkills.length > 0 ? (\n          jobSeekerCVSkills.map((jobSeekerCVSkill) => (\n            <div\n              key={jobSeekerCVSkill.id}\n              className='badge bg-secondary w-100 d-flex justify-content-start align-items-center mb-2 py-3 position-relative shadow'\n            >\n              {jobSeekerCVSkill.name}\n              {isEditing && (\n                <button\n                  onClick={() => delete_(jobSeekerCVSkill.id)}\n                  className='btn bg-transparent shadow-none text-white position-absolute'\n                  style={{ right: 0 }}\n                >\n                  <i className='bi bi-trash-fill' />\n                </button>\n              )}\n            </div>\n          ))\n        ) : (\n          <div className='d-flex justify-content-center align-items-center display-1 text-light'>\n            <i className='bi bi-text-paragraph' />\n          </div>\n        )}\n      </div>\n      {isEditing && (\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={(values) => add(values)}\n        >\n          <Form>\n            <FormInput\n              name='name'\n              label={false}\n              render={\n                <button\n                  type='submit'\n                  className='input-group-text btn btn-primary'\n                  htmlFor={`name-input`}\n                >\n                  Add\n                </button>\n              }\n            />\n          </Form>\n        </Formik>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}