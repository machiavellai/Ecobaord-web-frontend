{"ast":null,"code":"var _jsxFileName = \"/Users/machiavelli/Desktop/hrms-project-frontend/src/pages/JobSeekers/CV/Update/JobSeekerCVUpdateWebSites.jsx\",\n    _s = $RefreshSig$();\n\nimport * as Yup from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport FormInput from \"../../../../components/FormInput/FormInput\";\nimport FormSelect from \"../../../../components/FormSelect/FormSelect\";\nimport JobSeekerCVWebsiteService from \"../../../../services/jobSeekerCVWebSiteService\";\nimport WebSiteService from \"../../../../services/webSiteService\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobSeekerCVUpdateWebSites({\n  jobSeekerCV\n}) {\n  _s();\n\n  const [jobSeekerCVWebsites, setJobSeekerCVWebsites] = useState([]),\n        [webSites, setWebSites] = useState([]),\n        [isEditing, setIsEditing] = useState(false);\n\n  const toggleEditing = () => setIsEditing(!isEditing);\n\n  const webSiteService = useMemo(() => new WebSiteService(), []),\n        getAllWebsites = useCallback(async () => {\n    const result = await webSiteService.getAll();\n    setWebSites(result.data.data);\n  }, [webSiteService]);\n\n  const jobSeekerCVWebsiteService = useMemo(() => new JobSeekerCVWebsiteService(), []),\n        getAllByJobSeekerCVId = useCallback(async jobSeekerCVId => {\n    const result = await jobSeekerCVWebsiteService.getAllByJobSeekerCV_Id(jobSeekerCVId);\n    if (result.data.success) setJobSeekerCVWebsites(result.data.data);\n  }, [jobSeekerCVWebsiteService]),\n        addJobSeekerCVWebsite = async values => {\n    const newJobSeekerCVWebsite = {\n      jobSeekerCV,\n      ...values\n    },\n          result = await jobSeekerCVWebsiteService.add(newJobSeekerCVWebsite);\n\n    if (result.data.success) {\n      toast.success(result.data.message);\n      getAllByJobSeekerCVId(jobSeekerCV.id);\n    }\n  },\n        deleteJobSeekerCVWebsite = async jobSeekerCVWebsiteId => {\n    const result = await jobSeekerCVWebsiteService.delete(jobSeekerCVWebsiteId);\n\n    if (result.data.success) {\n      toast.success(result.data.message);\n      getAllByJobSeekerCVId(jobSeekerCV.id);\n    }\n  };\n\n  const initialValues = {\n    webSite: undefined,\n    address: \"\"\n  },\n        validationSchema = Yup.object().shape({\n    webSite: Yup.object().required(),\n    address: Yup.string().required()\n  });\n  useEffect(() => {\n    getAllByJobSeekerCVId(jobSeekerCV.id);\n    getAllWebsites();\n  }, [getAllByJobSeekerCVId, getAllWebsites, jobSeekerCV.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Websites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), !isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn shadow-none\",\n        onClick: () => toggleEditing(),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-pencil-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn shadow-none\",\n        onClick: () => toggleEditing(),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-check-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [jobSeekerCVWebsites.length > 0 ? jobSeekerCVWebsites.map(jobSeekerCVWebsite => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge bg-secondary w-100 d-flex justify-content-start align-items-center mb-2 py-3 position-relative shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: jobSeekerCVWebsite.address,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          className: \"link-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `bi bi-${jobSeekerCVWebsite.webSite.name} me-2`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), jobSeekerCVWebsite.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteJobSeekerCVWebsite(jobSeekerCVWebsite.id),\n          className: \"btn bg-transparent shadow-none text-white position-absolute\",\n          style: {\n            right: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-trash-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, jobSeekerCVWebsite.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center display-1 text-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-text-paragraph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: values => addJobSeekerCVWebsite(values),\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm\",\n              children: /*#__PURE__*/_jsxDEV(FormSelect, {\n                name: \"webSite\",\n                options: webSites.map(l => ({\n                  value: l,\n                  label: l.name\n                })),\n                label: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm\",\n              children: /*#__PURE__*/_jsxDEV(FormInput, {\n                name: \"address\",\n                label: false,\n                placeholder: \"address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobSeekerCVUpdateWebSites, \"B0btQD0La3MTNYExlR4DamgeEN8=\");\n\n_c = JobSeekerCVUpdateWebSites;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobSeekerCVUpdateWebSites\");","map":{"version":3,"sources":["/Users/machiavelli/Desktop/hrms-project-frontend/src/pages/JobSeekers/CV/Update/JobSeekerCVUpdateWebSites.jsx"],"names":["Yup","Form","Formik","React","useCallback","useEffect","useMemo","useState","FormInput","FormSelect","JobSeekerCVWebsiteService","WebSiteService","toast","JobSeekerCVUpdateWebSites","jobSeekerCV","jobSeekerCVWebsites","setJobSeekerCVWebsites","webSites","setWebSites","isEditing","setIsEditing","toggleEditing","webSiteService","getAllWebsites","result","getAll","data","jobSeekerCVWebsiteService","getAllByJobSeekerCVId","jobSeekerCVId","getAllByJobSeekerCV_Id","success","addJobSeekerCVWebsite","values","newJobSeekerCVWebsite","add","message","id","deleteJobSeekerCVWebsite","jobSeekerCVWebsiteId","delete","initialValues","webSite","undefined","address","validationSchema","object","shape","required","string","length","map","jobSeekerCVWebsite","name","right","l","value","label"],"mappings":"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","sourcesContent":["import * as Yup from \"yup\";\n\nimport { Form, Formik } from \"formik\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport FormInput from \"../../../../components/FormInput/FormInput\";\nimport FormSelect from \"../../../../components/FormSelect/FormSelect\";\nimport JobSeekerCVWebsiteService from \"../../../../services/jobSeekerCVWebSiteService\";\nimport WebSiteService from \"../../../../services/webSiteService\";\nimport { toast } from \"react-toastify\";\n\nexport default function JobSeekerCVUpdateWebSites({ jobSeekerCV }) {\n  const [jobSeekerCVWebsites, setJobSeekerCVWebsites] = useState([]),\n    [webSites, setWebSites] = useState([]),\n    [isEditing, setIsEditing] = useState(false);\n\n  const toggleEditing = () => setIsEditing(!isEditing);\n\n  const webSiteService = useMemo(() => new WebSiteService(), []),\n    getAllWebsites = useCallback(async () => {\n      const result = await webSiteService.getAll();\n      setWebSites(result.data.data);\n    }, [webSiteService]);\n\n  const jobSeekerCVWebsiteService = useMemo(() => new JobSeekerCVWebsiteService(), []),\n    getAllByJobSeekerCVId = useCallback(\n      async (jobSeekerCVId) => {\n        const result = await jobSeekerCVWebsiteService.getAllByJobSeekerCV_Id(jobSeekerCVId);\n        if (result.data.success) setJobSeekerCVWebsites(result.data.data);\n      },\n      [jobSeekerCVWebsiteService]\n    ),\n    addJobSeekerCVWebsite = async (values) => {\n      const newJobSeekerCVWebsite = {\n          jobSeekerCV,\n          ...values,\n        },\n        result = await jobSeekerCVWebsiteService.add(newJobSeekerCVWebsite);\n      if (result.data.success) {\n        toast.success(result.data.message);\n        getAllByJobSeekerCVId(jobSeekerCV.id);\n      }\n    },\n    deleteJobSeekerCVWebsite = async (jobSeekerCVWebsiteId) => {\n      const result = await jobSeekerCVWebsiteService.delete(jobSeekerCVWebsiteId);\n      if (result.data.success) {\n        toast.success(result.data.message);\n        getAllByJobSeekerCVId(jobSeekerCV.id);\n      }\n    };\n\n  const initialValues = {\n      webSite: undefined,\n      address: \"\",\n    },\n    validationSchema = Yup.object().shape({\n      webSite: Yup.object().required(),\n      address: Yup.string().required(),\n    });\n\n  useEffect(() => {\n    getAllByJobSeekerCVId(jobSeekerCV.id);\n    getAllWebsites();\n  }, [getAllByJobSeekerCVId, getAllWebsites, jobSeekerCV.id]);\n\n  return (\n    <div>\n      <div className='d-flex justify-content-between align-items-center'>\n        <h3>Websites</h3>\n        {!isEditing ? (\n          <button className='btn shadow-none' onClick={() => toggleEditing()}>\n            <i className='bi bi-pencil-square' />\n          </button>\n        ) : (\n          <button type='button' className='btn shadow-none' onClick={() => toggleEditing()}>\n            <i className='bi bi-check-lg' />\n          </button>\n        )}\n      </div>\n      <div className='mb-3'>\n        {jobSeekerCVWebsites.length > 0 ? (\n          jobSeekerCVWebsites.map((jobSeekerCVWebsite) => (\n            <div\n              key={jobSeekerCVWebsite.id}\n              className='badge bg-secondary w-100 d-flex justify-content-start align-items-center mb-2 py-3 position-relative shadow'\n            >\n              <a\n                href={jobSeekerCVWebsite.address}\n                target='_blank'\n                rel='noreferrer'\n                className='link-light'\n              >\n                <i className={`bi bi-${jobSeekerCVWebsite.webSite.name} me-2`} />\n                {jobSeekerCVWebsite.address}\n              </a>\n\n              {isEditing && (\n                <button\n                  onClick={() => deleteJobSeekerCVWebsite(jobSeekerCVWebsite.id)}\n                  className='btn bg-transparent shadow-none text-white position-absolute'\n                  style={{ right: 0 }}\n                >\n                  <i className='bi bi-trash-fill' />\n                </button>\n              )}\n            </div>\n          ))\n        ) : (\n          <div className='d-flex justify-content-center align-items-center display-1 text-light'>\n            <i className='bi bi-text-paragraph' />\n          </div>\n        )}\n        {isEditing && (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={(values) => addJobSeekerCVWebsite(values)}\n          >\n            <Form>\n              <div className='row mt-4'>\n                <div className='col-sm'>\n                  <FormSelect\n                    name='webSite'\n                    options={webSites.map((l) => ({\n                      value: l,\n                      label: l.name,\n                    }))}\n                    label={false}\n                  />\n                </div>\n                <div className='col-sm'>\n                  <FormInput name='address' label={false} placeholder={\"address\"} />\n                </div>\n                <div className='col-sm'>\n                  <button type='submit' className='btn btn-primary'>\n                    Add\n                  </button>\n                </div>\n              </div>\n            </Form>\n          </Formik>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}