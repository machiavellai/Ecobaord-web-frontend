{"ast":null,"code":"var _jsxFileName = \"/Users/machiavelli/Desktop/hrms-project-frontend/src/pages/JobSeekers/CV/Update/JobSeekerCVUpdate.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./JobSeekerCVUpdate.scss\";\nimport * as Yup from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport DisplayHeader from \"../../../../components/DisplayHeader/DisplayHeader\";\nimport FormTextArea from \"../../../../components/FormTextArea/FormTextArea\";\nimport JobSeekerCVService from \"../../../../services/jobSeekerCVService\";\nimport JobSeekerCVUpdateEducations from \"./JobSeekerCVUpdateEducations\";\nimport JobSeekerCVUpdateExperiences from \"./JobSeekerCVUpdateExperiences\";\nimport JobSeekerCVUpdateImages from \"./JobSeekerCVUpdateImages\";\nimport JobSeekerCVUpdateLanguages from \"./JobSeekerCVUpdateLanguages\";\nimport JobSeekerCVUpdateSkills from \"./JobSeekerCVUpdateSkills\";\nimport JobSeekerCVUpdateWebSites from \"./JobSeekerCVUpdateWebSites\";\nimport LoadingSpinner from \"../../../../components/LoadingSpinner/LoadingSpinner\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobSeekerCVUpdate() {\n  _s();\n\n  const [jobSeekerCV, setJobSeekerCV] = useState(null),\n        [isEditingCV, setIsEditingCV] = useState(false);\n\n  const toggleEditing = () => {\n    setIsEditingCV(!isEditingCV);\n  };\n\n  const jobSeekerCVService = useMemo(() => new JobSeekerCVService(), []),\n        getJobSeekerCV = useCallback(async () => {\n    const jobSeeker = {\n      id: 1\n    },\n          //TODO Login Redux\n    result = await jobSeekerCVService.getByJobSeeker_Id(jobSeeker.id);\n    setJobSeekerCV(result.data.data);\n  }, [jobSeekerCVService]),\n        update = async values => {\n    const updatedJobSeekerCV = { ...jobSeekerCV,\n      ...values\n    },\n          result = await jobSeekerCVService.update(updatedJobSeekerCV);\n    if (result.data.success) toast.success(result.data.message);\n  };\n\n  const validationSchema = Yup.object().shape({\n    coverLetter: Yup.string().required()\n  });\n  useEffect(() => {\n    getJobSeekerCV();\n  }, [getJobSeekerCV]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container h-100\",\n    children: [/*#__PURE__*/_jsxDEV(DisplayHeader, {\n      firstText: \"Edit\",\n      secondText: \"CV Information\",\n      size: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), jobSeekerCV ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Personal Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-bold me-2\",\n              children: \"First Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), jobSeekerCV.jobSeeker.firstName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-bold me-2\",\n              children: \"Last Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), jobSeekerCV.jobSeeker.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-bold me-2\",\n              children: \"Birth Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), new Date(...jobSeekerCV.jobSeeker.birthDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-bold me-2\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), jobSeekerCV.jobSeeker.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md\",\n          children: /*#__PURE__*/_jsxDEV(JobSeekerCVUpdateImages, {\n            jobSeekerCV: jobSeekerCV\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              coverLetter: jobSeekerCV.coverLetter\n            },\n            validationSchema: validationSchema,\n            onSubmit: values => update(values),\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Additional Information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this), !isEditingCV ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn shadow-none\",\n                  onClick: () => toggleEditing(),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-pencil-square\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn shadow-none\",\n                  onClick: () => toggleEditing(),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-check-lg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormTextArea, {\n                name: \"coverLetter\",\n                disabled: !isEditingCV\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md\",\n          children: /*#__PURE__*/_jsxDEV(JobSeekerCVUpdateWebSites, {\n            jobSeekerCV: jobSeekerCV\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md\",\n          children: /*#__PURE__*/_jsxDEV(JobSeekerCVUpdateExperiences, {\n            jobSeekerCV: jobSeekerCV\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md\",\n          children: /*#__PURE__*/_jsxDEV(JobSeekerCVUpdateEducations, {\n            jobSeekerCV: jobSeekerCV\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md\",\n          children: /*#__PURE__*/_jsxDEV(JobSeekerCVUpdateSkills, {\n            jobSeekerCV: jobSeekerCV\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md\",\n          children: /*#__PURE__*/_jsxDEV(JobSeekerCVUpdateLanguages, {\n            jobSeekerCV: jobSeekerCV\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobSeekerCVUpdate, \"npKfjMm7c8f0bLWuJCQpf4YJCAg=\");\n\n_c = JobSeekerCVUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobSeekerCVUpdate\");","map":{"version":3,"sources":["/Users/machiavelli/Desktop/hrms-project-frontend/src/pages/JobSeekers/CV/Update/JobSeekerCVUpdate.jsx"],"names":["Yup","Form","Formik","React","useCallback","useEffect","useMemo","useState","DisplayHeader","FormTextArea","JobSeekerCVService","JobSeekerCVUpdateEducations","JobSeekerCVUpdateExperiences","JobSeekerCVUpdateImages","JobSeekerCVUpdateLanguages","JobSeekerCVUpdateSkills","JobSeekerCVUpdateWebSites","LoadingSpinner","toast","JobSeekerCVUpdate","jobSeekerCV","setJobSeekerCV","isEditingCV","setIsEditingCV","toggleEditing","jobSeekerCVService","getJobSeekerCV","jobSeeker","id","result","getByJobSeeker_Id","data","update","values","updatedJobSeekerCV","success","message","validationSchema","object","shape","coverLetter","string","required","firstName","lastName","Date","birthDate","toLocaleDateString","email"],"mappings":"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","sourcesContent":["import \"./JobSeekerCVUpdate.scss\";\n\nimport * as Yup from \"yup\";\n\nimport { Form, Formik } from \"formik\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport DisplayHeader from \"../../../../components/DisplayHeader/DisplayHeader\";\nimport FormTextArea from \"../../../../components/FormTextArea/FormTextArea\";\nimport JobSeekerCVService from \"../../../../services/jobSeekerCVService\";\nimport JobSeekerCVUpdateEducations from \"./JobSeekerCVUpdateEducations\";\nimport JobSeekerCVUpdateExperiences from \"./JobSeekerCVUpdateExperiences\";\nimport JobSeekerCVUpdateImages from \"./JobSeekerCVUpdateImages\";\nimport JobSeekerCVUpdateLanguages from \"./JobSeekerCVUpdateLanguages\";\nimport JobSeekerCVUpdateSkills from \"./JobSeekerCVUpdateSkills\";\nimport JobSeekerCVUpdateWebSites from \"./JobSeekerCVUpdateWebSites\";\nimport LoadingSpinner from \"../../../../components/LoadingSpinner/LoadingSpinner\";\nimport { toast } from \"react-toastify\";\n\nexport default function JobSeekerCVUpdate() {\n  const [jobSeekerCV, setJobSeekerCV] = useState(null),\n    [isEditingCV, setIsEditingCV] = useState(false);\n\n  const toggleEditing = () => {\n    setIsEditingCV(!isEditingCV);\n  };\n\n  const jobSeekerCVService = useMemo(() => new JobSeekerCVService(), []),\n    getJobSeekerCV = useCallback(async () => {\n      const jobSeeker = { id: 1 }, //TODO Login Redux\n        result = await jobSeekerCVService.getByJobSeeker_Id(jobSeeker.id);\n      setJobSeekerCV(result.data.data);\n    }, [jobSeekerCVService]),\n    update = async (values) => {\n      const updatedJobSeekerCV = { ...jobSeekerCV, ...values },\n        result = await jobSeekerCVService.update(updatedJobSeekerCV);\n      if (result.data.success) toast.success(result.data.message);\n    };\n\n  const validationSchema = Yup.object().shape({\n    coverLetter: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    getJobSeekerCV();\n  }, [getJobSeekerCV]);\n\n  return (\n    <div className='container h-100'>\n      <DisplayHeader firstText='Edit' secondText='CV Information' size='5' />\n\n      {jobSeekerCV ? (\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md'>\n              <h3>Personal Information</h3>\n              <div className='mb-2'>\n                <span className='fw-bold me-2'>First Name:</span>\n                {jobSeekerCV.jobSeeker.firstName}\n              </div>\n              <div className='mb-2'>\n                <span className='fw-bold me-2'>Last Name:</span>\n                {jobSeekerCV.jobSeeker.lastName}\n              </div>\n              <div className='mb-2'>\n                <span className='fw-bold me-2'>Birth Date:</span>\n                {new Date(...jobSeekerCV.jobSeeker.birthDate).toLocaleDateString()}\n              </div>\n              <div className='mb-2'>\n                <span className='fw-bold me-2'>Email:</span>\n                {jobSeekerCV.jobSeeker.email}\n              </div>\n            </div>\n            <div className='col-md'>\n              <JobSeekerCVUpdateImages jobSeekerCV={jobSeekerCV} />\n            </div>\n          </div>\n\n          <div className='row mb-4'>\n            <div className='col-md'>\n              <Formik\n                initialValues={{ coverLetter: jobSeekerCV.coverLetter }}\n                validationSchema={validationSchema}\n                onSubmit={(values) => update(values)}\n              >\n                <Form>\n                  <div className='d-flex justify-content-between align-items-center'>\n                    <h3>Additional Information</h3>\n                    {!isEditingCV ? (\n                      <button className='btn shadow-none' onClick={() => toggleEditing()}>\n                        <i className='bi bi-pencil-square' />\n                      </button>\n                    ) : (\n                      <button\n                        type='button'\n                        className='btn shadow-none'\n                        onClick={() => toggleEditing()}\n                      >\n                        <i className='bi bi-check-lg' />\n                      </button>\n                    )}\n                  </div>\n                  <FormTextArea name='coverLetter' disabled={!isEditingCV}></FormTextArea>\n                </Form>\n              </Formik>\n            </div>\n            <div className='col-md'>\n              <JobSeekerCVUpdateWebSites jobSeekerCV={jobSeekerCV} />\n            </div>\n          </div>\n\n          <div className='row mb-4'>\n            <div className='col-md'>\n              <JobSeekerCVUpdateExperiences jobSeekerCV={jobSeekerCV} />\n            </div>\n            <div className='col-md'>\n              <JobSeekerCVUpdateEducations jobSeekerCV={jobSeekerCV} />\n            </div>\n          </div>\n\n          <div className='row mb-4'>\n            <div className='col-md'>\n              <JobSeekerCVUpdateSkills jobSeekerCV={jobSeekerCV} />\n            </div>\n            <div className='col-md'>\n              <JobSeekerCVUpdateLanguages jobSeekerCV={jobSeekerCV} />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}