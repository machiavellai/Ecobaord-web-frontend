{"ast":null,"code":"var _jsxFileName = \"/Users/machiavelli/Desktop/hrms-project-frontend/src/pages/JobSeekers/CV/Update/JobSeekerCVUpdateExperiences.jsx\",\n    _s = $RefreshSig$();\n\nimport * as Yup from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport FormInput from \"../../../../components/FormInput/FormInput\";\nimport FormSelect from \"../../../../components/FormSelect/FormSelect\";\nimport JobPositionService from \"../../../../services/jobPositionService\";\nimport JobSeekerCVExperienceService from \"../../../../services/jobSeekerCVExperienceService\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobSeekerCVUpdateExperiences({\n  jobSeekerCV\n}) {\n  _s();\n\n  const [jobSeekerCVExperiences, setJobSeekerCVExperiences] = useState([]),\n        [experiences, setExperiences] = useState([]),\n        [isEditing, setIsEditing] = useState(false);\n\n  const toggleEditing = () => setIsEditing(!isEditing);\n\n  const jobPositionService = useMemo(() => new JobPositionService(), []),\n        getAllExperiences = useCallback(async () => {\n    const result = await jobPositionService.getAll();\n    setExperiences(result.data.data);\n  }, [jobPositionService]);\n\n  const jobSeekerCVExperienceService = useMemo(() => new JobSeekerCVExperienceService(), []),\n        getAllByJobSeekerCVId = useCallback(async jobSeekerCVId => {\n    const result = await jobSeekerCVExperienceService.getAllByJobSeekerCV_Id(jobSeekerCVId);\n    if (result.data.success) setJobSeekerCVExperiences(result.data.data);\n  }, [jobSeekerCVExperienceService]),\n        addJobSeekerCVExperience = async values => {\n    const newJobSeekerCVExperience = {\n      jobSeekerCV,\n      ...values\n    };\n    const result = await jobSeekerCVExperienceService.add(newJobSeekerCVExperience);\n\n    if (result.data.success) {\n      toast.success(result.data.message);\n      getAllByJobSeekerCVId(jobSeekerCV.id);\n    }\n  },\n        deleteJobSeekerCVExperience = async jobSeekerCVExperienceId => {\n    const result = await jobSeekerCVExperienceService.delete(jobSeekerCVExperienceId);\n\n    if (result.data.success) {\n      toast.success(result.data.message);\n      getAllByJobSeekerCVId(jobSeekerCV.id);\n    }\n  };\n\n  const initialValues = {\n    jobPosition: undefined,\n    workplaceName: \"\",\n    startDate: \"\",\n    quitDate: \"\"\n  },\n        validationSchema = Yup.object().shape({\n    jobPosition: Yup.object().required(),\n    workplaceName: Yup.string().required(),\n    startDate: Yup.date().required(),\n    quitDate: Yup.date().min(Yup.ref(\"startDate\"))\n  });\n  useEffect(() => {\n    getAllByJobSeekerCVId(jobSeekerCV.id);\n    getAllExperiences();\n  }, [getAllByJobSeekerCVId, getAllExperiences, jobSeekerCV.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Experiences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), !isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn shadow-none\",\n        onClick: () => toggleEditing(),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-pencil-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn shadow-none\",\n        onClick: () => toggleEditing(),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-check-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [jobSeekerCVExperiences.length > 0 ? jobSeekerCVExperiences.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"position-relative rounded shadow mb-3\",\n        children: [isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteJobSeekerCVExperience(e.id),\n          className: \"btn btn-danger text-white position-absolute\",\n          style: {\n            right: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-trash-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-bold me-2\",\n              children: \"Job Position:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), e.jobPosition.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-bold me-2\",\n              children: \"Workplace:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), e.workplaceName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fw-bold me-2\",\n                children: \"Start Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this), new Date(...e.startDate).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fw-bold me-2\",\n                children: \"Quit Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), e.quitDate ? new Date(...e.quitDate).toLocaleDateString() : \"continues\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, e.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center display-1 text-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-text-paragraph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary w-100\",\n        \"data-bs-toggle\": \"modal\",\n        \"data-bs-target\": \"#add-experiences-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-plus-lg me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), \"Add Experiences\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"add-experiences-modal\",\n      tabIndex: -1,\n      \"aria-labelledby\": \"add-experiences-modal\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered modal-lg modal-dialog-scrollable\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: initialValues,\n            validationSchema: validationSchema,\n            onSubmit: values => addJobSeekerCVExperience(values),\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"modal-title\",\n                  id: \"add-experiences-modal\",\n                  children: \"Add Experiences\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn-close\",\n                  \"data-bs-dismiss\": \"modal\",\n                  \"aria-label\": \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-body\",\n                children: [/*#__PURE__*/_jsxDEV(FormSelect, {\n                  name: \"jobPosition\",\n                  options: experiences.map(e => ({\n                    value: e,\n                    label: e.title\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  name: \"workplaceName\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  name: \"startDate\",\n                  type: \"date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  name: \"quitDate\",\n                  type: \"date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-footer\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-secondary\",\n                  \"data-bs-dismiss\": \"modal\",\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobSeekerCVUpdateExperiences, \"+iDYkz7BUW60I+ZKsSgcm+YVWcI=\");\n\n_c = JobSeekerCVUpdateExperiences;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobSeekerCVUpdateExperiences\");","map":{"version":3,"sources":["/Users/machiavelli/Desktop/hrms-project-frontend/src/pages/JobSeekers/CV/Update/JobSeekerCVUpdateExperiences.jsx"],"names":["Yup","Form","Formik","React","useCallback","useEffect","useMemo","useState","FormInput","FormSelect","JobPositionService","JobSeekerCVExperienceService","toast","JobSeekerCVUpdateExperiences","jobSeekerCV","jobSeekerCVExperiences","setJobSeekerCVExperiences","experiences","setExperiences","isEditing","setIsEditing","toggleEditing","jobPositionService","getAllExperiences","result","getAll","data","jobSeekerCVExperienceService","getAllByJobSeekerCVId","jobSeekerCVId","getAllByJobSeekerCV_Id","success","addJobSeekerCVExperience","values","newJobSeekerCVExperience","add","message","id","deleteJobSeekerCVExperience","jobSeekerCVExperienceId","delete","initialValues","jobPosition","undefined","workplaceName","startDate","quitDate","validationSchema","object","shape","required","string","date","min","ref","length","map","e","right","title","Date","toLocaleDateString","value","label"],"mappings":"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","sourcesContent":["import * as Yup from \"yup\";\n\nimport { Form, Formik } from \"formik\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport FormInput from \"../../../../components/FormInput/FormInput\";\nimport FormSelect from \"../../../../components/FormSelect/FormSelect\";\nimport JobPositionService from \"../../../../services/jobPositionService\";\nimport JobSeekerCVExperienceService from \"../../../../services/jobSeekerCVExperienceService\";\nimport { toast } from \"react-toastify\";\n\nexport default function JobSeekerCVUpdateExperiences({ jobSeekerCV }) {\n  const [jobSeekerCVExperiences, setJobSeekerCVExperiences] = useState([]),\n    [experiences, setExperiences] = useState([]),\n    [isEditing, setIsEditing] = useState(false);\n\n  const toggleEditing = () => setIsEditing(!isEditing);\n\n  const jobPositionService = useMemo(() => new JobPositionService(), []),\n    getAllExperiences = useCallback(async () => {\n      const result = await jobPositionService.getAll();\n      setExperiences(result.data.data);\n    }, [jobPositionService]);\n\n  const jobSeekerCVExperienceService = useMemo(() => new JobSeekerCVExperienceService(), []),\n    getAllByJobSeekerCVId = useCallback(\n      async (jobSeekerCVId) => {\n        const result = await jobSeekerCVExperienceService.getAllByJobSeekerCV_Id(jobSeekerCVId);\n        if (result.data.success) setJobSeekerCVExperiences(result.data.data);\n      },\n      [jobSeekerCVExperienceService]\n    ),\n    addJobSeekerCVExperience = async (values) => {\n      const newJobSeekerCVExperience = {\n        jobSeekerCV,\n        ...values,\n      };\n      const result = await jobSeekerCVExperienceService.add(newJobSeekerCVExperience);\n\n      if (result.data.success) {\n        toast.success(result.data.message);\n        getAllByJobSeekerCVId(jobSeekerCV.id);\n      }\n    },\n    deleteJobSeekerCVExperience = async (jobSeekerCVExperienceId) => {\n      const result = await jobSeekerCVExperienceService.delete(jobSeekerCVExperienceId);\n      if (result.data.success) {\n        toast.success(result.data.message);\n        getAllByJobSeekerCVId(jobSeekerCV.id);\n      }\n    };\n\n  const initialValues = {\n      jobPosition: undefined,\n      workplaceName: \"\",\n      startDate: \"\",\n      quitDate: \"\",\n    },\n    validationSchema = Yup.object().shape({\n      jobPosition: Yup.object().required(),\n      workplaceName: Yup.string().required(),\n      startDate: Yup.date().required(),\n      quitDate: Yup.date().min(Yup.ref(\"startDate\")),\n    });\n\n  useEffect(() => {\n    getAllByJobSeekerCVId(jobSeekerCV.id);\n    getAllExperiences();\n  }, [getAllByJobSeekerCVId, getAllExperiences, jobSeekerCV.id]);\n\n  return (\n    <div>\n      <div className='d-flex justify-content-between align-items-center'>\n        <h3>Experiences</h3>\n        {!isEditing ? (\n          <button className='btn shadow-none' onClick={() => toggleEditing()}>\n            <i className='bi bi-pencil-square' />\n          </button>\n        ) : (\n          <button type='button' className='btn shadow-none' onClick={() => toggleEditing()}>\n            <i className='bi bi-check-lg' />\n          </button>\n        )}\n      </div>\n      <div className='mb-3'>\n        {jobSeekerCVExperiences.length > 0 ? (\n          jobSeekerCVExperiences.map((e) => (\n            <div key={e.id} className='position-relative rounded shadow mb-3'>\n              {isEditing && (\n                <button\n                  onClick={() => deleteJobSeekerCVExperience(e.id)}\n                  className='btn btn-danger text-white position-absolute'\n                  style={{ right: 0 }}\n                >\n                  <i className='bi bi-trash-fill' />\n                </button>\n              )}\n              <div className='row p-3'>\n                <div className='mb-2'>\n                  <span className='fw-bold me-2'>Job Position:</span>\n                  {e.jobPosition.title}\n                </div>\n                <div className='mb-2'>\n                  <span className='fw-bold me-2'>Workplace:</span>\n                  {e.workplaceName}\n                </div>\n                <div className='col-sm'>\n                  <div className='mb-2'>\n                    <span className='fw-bold me-2'>Start Date:</span>\n                    {new Date(...e.startDate).toLocaleDateString()}\n                  </div>\n                </div>\n                <div className='col-sm'>\n                  <div className='mb-2'>\n                    <span className='fw-bold me-2'>Quit Date:</span>\n                    {e.quitDate ? new Date(...e.quitDate).toLocaleDateString() : \"continues\"}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className='d-flex justify-content-center align-items-center display-1 text-light'>\n            <i className='bi bi-text-paragraph' />\n          </div>\n        )}\n        {isEditing && (\n          <button\n            type='button'\n            className='btn btn-primary w-100'\n            data-bs-toggle='modal'\n            data-bs-target='#add-experiences-modal'\n          >\n            <i className='bi bi-plus-lg me-2' />\n            Add Experiences\n          </button>\n        )}\n      </div>\n\n      <div\n        className='modal fade'\n        id='add-experiences-modal'\n        tabIndex={-1}\n        aria-labelledby='add-experiences-modal'\n        aria-hidden='true'\n      >\n        <div className='modal-dialog modal-dialog-centered modal-lg modal-dialog-scrollable'>\n          <div className='modal-content'>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={validationSchema}\n              onSubmit={(values) => addJobSeekerCVExperience(values)}\n            >\n              <Form>\n                <div className='modal-header'>\n                  <h5 className='modal-title' id='add-experiences-modal'>\n                    Add Experiences\n                  </h5>\n                  <button\n                    type='button'\n                    className='btn-close'\n                    data-bs-dismiss='modal'\n                    aria-label='Close'\n                  />\n                </div>\n                <div className='modal-body'>\n                  <FormSelect\n                    name='jobPosition'\n                    options={experiences.map((e) => ({\n                      value: e,\n                      label: e.title,\n                    }))}\n                  />\n                  <FormInput name='workplaceName' type='text' />\n                  <FormInput name='startDate' type='date' />\n                  <FormInput name='quitDate' type='date' />\n                </div>\n                <div className='modal-footer'>\n                  <button type='button' className='btn btn-secondary' data-bs-dismiss='modal'>\n                    Close\n                  </button>\n                  <button type='submit' className='btn btn-primary'>\n                    Add\n                  </button>\n                </div>\n              </Form>\n            </Formik>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}